type PaprController @entity {
  id: ID!
  createdAt: BigInt!
  # TODO watch for update pool address events
  poolAddress: Bytes!
  underlying: Bytes!
  paprToken: Bytes!
  target: BigInt!
  vaults: [Vault!] @derivedFrom(field: "controller")
  allowedCollateral: [AllowedCollateral!]! @derivedFrom(field: "controller")
  targetUpdates: [TargetUpdate!] @derivedFrom(field: "controller")
}

type Vault @entity {
  id: ID!
  account: Bytes!
  collateralContract: Bytes!
  controller: PaprController!
  debt: BigInt!
  debtPerCollateral: Int!
  collateral: [VaultCollateral!]! @derivedFrom(field: "vault")
}

type TargetUpdate @entity {
  id: ID!
  timestamp: BigInt!
  newTarget: BigInt!
  controller: PaprController!
}

type VaultCollateral @entity {
  id: ID!
  contractAddress: Bytes!
  tokenId: BigInt!
  vault: Vault
  symbol: String!
}

type AllowedCollateral @entity {
  id: ID!
  contractAddress: Bytes!
  controller: PaprController!
  allowed: Boolean!
}

type AddCollateralEvent @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  controller: PaprController!
  collateral: VaultCollateral!
  txHash: Bytes!
}

type RemoveCollateralEvent @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  controller: PaprController!
  collateral: VaultCollateral!
  txHash: Bytes!
}

type DebtIncreasedEvent @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  controller: PaprController!
  amount: BigInt!
  txHash: Bytes!
}

type DebtDecreasedEvent @entity {
  id: ID!
  timestamp: BigInt!
  vault: Vault!
  controller: PaprController!
  amount: BigInt!
  txHash: Bytes!
}

type Auction @entity {
  id: ID!
  startedBy: Bytes!
  startTime: Int!
  endTime: Int!
  endPrice: BigInt!
  vault: Vault!
  # below are in event
  auctionAssetID: BigInt!
  auctionAssetContract: Bytes!
  perPeriodDecayPercentWad: BigInt!
  secondsInPeriod: Int!
  startPrice: BigInt!
  paymentAsset: Bytes!
}

type CollateralAllowedChangeEvent @entity {
  id: ID!
  timestamp: BigInt!
  collateralAddress: Bytes!
  controller: PaprController!
  allowed: Boolean!
  txHash: Bytes!
}
